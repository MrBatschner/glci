---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: integrationtest-gardenlinux-task
spec:
  params:
  - name: iaas
    type: string
  - name: ami_id
    type: string
    default: replaceme_aws
  - name: gcp_image_name
    type: string
    default: replaceme_gcp
  resources:
    inputs:
    - name: repo
      type: git
  steps:
    - name: 'integration-test'
      image: 'eu.gcr.io/gardener-project/cc/job-image:1.682.0'
      script: |
        #!/usr/bin/env bash
        set -e

        export SECRETS_SERVER_ENDPOINT="http://secrets-server.concourse.svc.cluster.local"
        export SECRETS_SERVER_CONCOURSE_CFG_NAME="concourse-secrets/concourse_cfg"



        echo "> Fetching secrets"
        cli.py config attribute --cfg-type testmachinery --cfg-name testmachinery-test-operators --key config.gardenlinux-ssh.key > /tmp/id_rsa
        cli.py config attribute --cfg-type testmachinery --cfg-name testmachinery-test-operators --key config.gardenlinux-ssh.pub > /tmp/id_rsa.pub

        awsAccessKeyID=$(cli.py config attribute --cfg-type testmachinery --cfg-name testmachinery-test-operators --key config.aws.accessKeyID)
        awsSecretAccessKey=$(cli.py config attribute --cfg-type testmachinery --cfg-name testmachinery-test-operators --key config.aws.secretAccessKey)
        cli.py config attribute --cfg-type testmachinery --cfg-name testmachinery-test-operators --key config.gcp --json  | jq -r '.["serviceaccount.json"]' > /tmp/serviceaccount.json


        echo "> Generating test config for AWS and GCP"
        printf "
        aws:
          # region and access keys, read from ~/.aws/config and ~/.aws/credentials if not set here
          region: eu-west-1
          access_key_id: %s
          secret_access_key: %s
          # which AMI to use for creating an ec2 instance
          ami_id: $(params.ami_id)
          ssh_key_filepath: /tmp/id_rsa
          # user and ssh key used to connect to the ec2 instance
          user: admin
          passphrase:
          # name of public ssh key imported to AWS
          key_name: gardenlinux-test
          remote_path: /
        gcp:
          project: sap-gcp-k8s-canary-custom
          zone: europe-west1-d
          service_account_json:
          service_account_json_path: /tmp/serviceaccount.json
          machine_type: n1-standard-1
          image_project: sap-se-gcp-gardenlinux
          image_name: $(params.gcp_image_name)
          # user and ssh key used to connect to the vm
          user: admin
          ssh_key_filepath: /tmp/id_rsa
          passphrase:
          remote_path: /
        " $awsAccessKeyID $awsSecretAccessKey > $(resources.inputs.repo.path)/tests/test_config.yaml

        echo "> Installing dependencies"
        apk update && apk add make
        pip install scp

        cd $(resources.inputs.repo.path)/tests

        echo "> Run tests"
        pytest --iaas=$(params.iaas) integration/
